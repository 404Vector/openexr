# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) Contributors to the OpenEXR Project.

name: Python Wheels

on:

  # Run on all changes (PR and push) to the python binding
  # source/configuration files, except on the release branches, which
  # have their own workflow, which also publish to pypi/test.pypi.
  # Note that changes to the core libraries will *not*
  # trigger building the wheels. However, the main ci workflow does
  # build and test the bindings (for a single python version on a
  # single arch)

  push:
    branches-ignore:
      - RB-*
    paths:
      - 'src/lib/**'
      - 'src/wrappers/python/**'
      - 'pyproject.toml'
      - '.github/workflows/python-wheels.yml'
  pull_request:
    branches-ignore:
      - RB-*
    paths:
      - 'src/lib/**'
      - 'src/wrappers/python/**'
      - 'pyproject.toml'
      - '.github/workflows/python-wheels.yml'
  workflow_dispatch:
    inputs:
      force:
        description: "Force build and ignore cache"
        required: false
        default: "false"
  workflow_call:
    inputs:
      force:
        description: "Force build and ignore cache"
        type: string
        required: false
        default: "false"
permissions:
  contents: read

jobs:
  build_wheels:
    name: Python Wheels - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      CACHE_PATH: wheelhouse
      CACHE_KEY: python-build-${{ github.sha }}-${{ matrix.os }}
    steps:

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install Python 
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.x'

      - name: Restore Build Cache
        id: restored-cache
        if: ${{ inputs.force != 'true' }}
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_PATH }} # 공통 변수 참조
          key: ${{ env.CACHE_KEY }}

      - name: Check if Build Cache Exists
        shell: bash
        run: |
          if [ ${{ inputs.force }} == "true" ]; then
              echo "Force build is enabled. Ignoring cache."
              echo "enable-build=true" >> $GITHUB_ENV
          elif [ "${{ steps.restored-cache.outputs.cache-hit }}" == "true" ]; then
              echo "Cache exists for this commit. Skipping build."
              echo "enable-build=false" >> $GITHUB_ENV
          else
              echo "No cache found. Proceeding with build."
              echo "enable-build=true" >> $GITHUB_ENV
          fi
        
      - name: Create sdist & pyi
        # Only create it once.
        if: ${{ matrix.os == 'ubuntu-latest' && env.enable-build == 'true' }}
        run: |
          pipx run build --sdist . --outdir wheelhouse
          pip install pybind11-stubgen tomli build
          pip install -r <(python -c "import tomli; print('\n'.join(tomli.load(open('pyproject.toml', 'rb'))['build-system']['requires']))")
          python -m build --outdir dist_for_pyi
          pip install $(find dist_for_pyi -type f -name "*.whl")
          pybind11-stubgen OpenEXR
          pip uninstall OpenEXR
          mv OpenEXR.pyi ${{ env.CACHE_PATH }}/

      - name: Build wheel
        if: ${{ env.enable-build == 'true' }}
        run: |
          mkdir -p ${{ env.CACHE_PATH }}
          echo "this is artifact of ${{ env.CACHE_PATH }}" > ${{ env.CACHE_PATH }}/${{ env.CACHE_KEY }}.txt

      # - name: Build wheel
      #   uses: pypa/cibuildwheel@7940a4c0e76eb2030e473a5f864f291f63ee879b # v2.21.3
      #   env:
      #     CIBW_ARCHS_MACOS: x86_64 arm64 universal2
      #     # Build Python 3.7 through 3.12.
      #     # Skip python 3.6 since scikit-build-core requires 3.7+
      #     # Skip 32-bit wheels builds on Windows
      #     # Also skip the PyPy builds, since they fail the unit tests
      #     CIBW_BUILD: "cp37-*"
      #     # CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-* cp311-* cp312-*"
      #     CIBW_SKIP: "*-win32 *_i686"
      #     CIBW_TEST_SKIP: "*-macosx*arm64"
      #     OPENEXR_TEST_IMAGE_REPO: "https://raw.githubusercontent.com/AcademySoftwareFoundation/openexr-images/main"

      - name: Save Build to Cache
        if:  ${{ env.enable-build == 'true' }}
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ env.CACHE_KEY }}
          enableCrossOsArchive: true
